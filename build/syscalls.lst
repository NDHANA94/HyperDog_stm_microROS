ARM GAS  /tmp/ccN81rdg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.initialise_monitor_handles,"ax",%progbits
  18              		.align	1
  19              		.global	initialise_monitor_handles
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	initialise_monitor_handles:
  27              	.LFB25:
  28              		.file 1 "Core/Src/syscalls.c"
   1:Core/Src/syscalls.c **** /**
   2:Core/Src/syscalls.c **** *****************************************************************************
   3:Core/Src/syscalls.c **** **
   4:Core/Src/syscalls.c **** **  File        : syscalls.c
   5:Core/Src/syscalls.c **** **
   6:Core/Src/syscalls.c **** **  Author		: Auto-generated by System workbench for STM32
   7:Core/Src/syscalls.c **** **
   8:Core/Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   9:Core/Src/syscalls.c **** **
  10:Core/Src/syscalls.c **** ** 		          For more information about which c-functions
  11:Core/Src/syscalls.c **** **                need which of these lowlevel functions
  12:Core/Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Core/Src/syscalls.c **** **
  14:Core/Src/syscalls.c **** **  Target      : STMicroelectronics STM32
  15:Core/Src/syscalls.c **** **
  16:Core/Src/syscalls.c **** **  Distribution: The file is distributed “as is,” without any warranty
  17:Core/Src/syscalls.c **** **                of any kind.
  18:Core/Src/syscalls.c **** **
  19:Core/Src/syscalls.c **** *****************************************************************************
  20:Core/Src/syscalls.c **** ** @attention
  21:Core/Src/syscalls.c **** **
  22:Core/Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:Core/Src/syscalls.c **** **
  24:Core/Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  25:Core/Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  26:Core/Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  27:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  28:Core/Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  30:Core/Src/syscalls.c **** **      and/or other materials provided with the distribution.
ARM GAS  /tmp/ccN81rdg.s 			page 2


  31:Core/Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Core/Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
  33:Core/Src/syscalls.c **** **      without specific prior written permission.
  34:Core/Src/syscalls.c **** **
  35:Core/Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Core/Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Core/Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Core/Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Core/Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Core/Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Core/Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Core/Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Core/Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Core/Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Core/Src/syscalls.c **** **
  46:Core/Src/syscalls.c **** *****************************************************************************
  47:Core/Src/syscalls.c **** */
  48:Core/Src/syscalls.c **** 
  49:Core/Src/syscalls.c **** /* Includes */
  50:Core/Src/syscalls.c **** #include <sys/stat.h>
  51:Core/Src/syscalls.c **** #include <stdlib.h>
  52:Core/Src/syscalls.c **** #include <errno.h>
  53:Core/Src/syscalls.c **** #include <stdio.h>
  54:Core/Src/syscalls.c **** #include <signal.h>
  55:Core/Src/syscalls.c **** #include <time.h>
  56:Core/Src/syscalls.c **** #include <sys/time.h>
  57:Core/Src/syscalls.c **** #include <sys/times.h>
  58:Core/Src/syscalls.c **** 
  59:Core/Src/syscalls.c **** 
  60:Core/Src/syscalls.c **** /* Variables */
  61:Core/Src/syscalls.c **** //#undef errno
  62:Core/Src/syscalls.c **** extern int errno;
  63:Core/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  64:Core/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  65:Core/Src/syscalls.c **** 
  66:Core/Src/syscalls.c **** register char * stack_ptr asm("sp");
  67:Core/Src/syscalls.c **** 
  68:Core/Src/syscalls.c **** char *__env[1] = { 0 };
  69:Core/Src/syscalls.c **** char **environ = __env;
  70:Core/Src/syscalls.c **** 
  71:Core/Src/syscalls.c **** extern char _estack;  // see ld file
  72:Core/Src/syscalls.c **** extern char _Min_Stack_Size;  // see ld file
  73:Core/Src/syscalls.c **** 
  74:Core/Src/syscalls.c **** /* Functions */
  75:Core/Src/syscalls.c **** void initialise_monitor_handles()
  76:Core/Src/syscalls.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  77:Core/Src/syscalls.c **** }
  34              		.loc 1 77 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE25:
  39              		.section	.text._getpid,"ax",%progbits
ARM GAS  /tmp/ccN81rdg.s 			page 3


  40              		.align	1
  41              		.global	_getpid
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	_getpid:
  48              	.LFB26:
  78:Core/Src/syscalls.c **** 
  79:Core/Src/syscalls.c **** int _getpid(void)
  80:Core/Src/syscalls.c **** {
  49              		.loc 1 80 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  81:Core/Src/syscalls.c **** 	return 1;
  54              		.loc 1 81 2 view .LVU3
  82:Core/Src/syscalls.c **** }
  55              		.loc 1 82 1 is_stmt 0 view .LVU4
  56 0000 0120     		movs	r0, #1
  57 0002 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE26:
  61              		.section	.text._kill,"ax",%progbits
  62              		.align	1
  63              		.global	_kill
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  67              		.fpu fpv4-sp-d16
  69              	_kill:
  70              	.LVL0:
  71              	.LFB27:
  83:Core/Src/syscalls.c **** 
  84:Core/Src/syscalls.c **** int _kill(int pid, int sig)
  85:Core/Src/syscalls.c **** {
  72              		.loc 1 85 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 85 1 is_stmt 0 view .LVU6
  77 0000 08B5     		push	{r3, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  86:Core/Src/syscalls.c **** 	errno = EINVAL;
  82              		.loc 1 86 2 is_stmt 1 view .LVU7
  83 0002 FFF7FEFF 		bl	__errno
  84              	.LVL1:
  85              		.loc 1 86 8 is_stmt 0 view .LVU8
  86 0006 1623     		movs	r3, #22
  87 0008 0360     		str	r3, [r0]
  87:Core/Src/syscalls.c **** 	return -1;
  88              		.loc 1 87 2 is_stmt 1 view .LVU9
  88:Core/Src/syscalls.c **** }
ARM GAS  /tmp/ccN81rdg.s 			page 4


  89              		.loc 1 88 1 is_stmt 0 view .LVU10
  90 000a 4FF0FF30 		mov	r0, #-1
  91 000e 08BD     		pop	{r3, pc}
  92              		.cfi_endproc
  93              	.LFE27:
  95              		.section	.text._exit,"ax",%progbits
  96              		.align	1
  97              		.global	_exit
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 101              		.fpu fpv4-sp-d16
 103              	_exit:
 104              	.LVL2:
 105              	.LFB28:
  89:Core/Src/syscalls.c **** 
  90:Core/Src/syscalls.c **** void _exit (int status)
  91:Core/Src/syscalls.c **** {
 106              		.loc 1 91 1 is_stmt 1 view -0
 107              		.cfi_startproc
 108              		@ Volatile: function does not return.
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		.loc 1 91 1 is_stmt 0 view .LVU12
 112 0000 08B5     		push	{r3, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 3, -8
 116              		.cfi_offset 14, -4
  92:Core/Src/syscalls.c **** 	_kill(status, -1);
 117              		.loc 1 92 2 is_stmt 1 view .LVU13
 118 0002 4FF0FF31 		mov	r1, #-1
 119 0006 FFF7FEFF 		bl	_kill
 120              	.LVL3:
 121              	.L6:
  93:Core/Src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
 122              		.loc 1 93 2 discriminator 1 view .LVU14
 123              		.loc 1 93 13 discriminator 1 view .LVU15
 124              		.loc 1 93 8 discriminator 1 view .LVU16
 125 000a FEE7     		b	.L6
 126              		.cfi_endproc
 127              	.LFE28:
 129              		.section	.text._read,"ax",%progbits
 130              		.align	1
 131              		.weak	_read
 132              		.syntax unified
 133              		.thumb
 134              		.thumb_func
 135              		.fpu fpv4-sp-d16
 137              	_read:
 138              	.LVL4:
 139              	.LFB29:
  94:Core/Src/syscalls.c **** }
  95:Core/Src/syscalls.c **** 
  96:Core/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  97:Core/Src/syscalls.c **** {
 140              		.loc 1 97 1 view -0
ARM GAS  /tmp/ccN81rdg.s 			page 5


 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		.loc 1 97 1 is_stmt 0 view .LVU18
 145 0000 70B5     		push	{r4, r5, r6, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 16
 148              		.cfi_offset 4, -16
 149              		.cfi_offset 5, -12
 150              		.cfi_offset 6, -8
 151              		.cfi_offset 14, -4
 152 0002 0C46     		mov	r4, r1
 153 0004 1646     		mov	r6, r2
  98:Core/Src/syscalls.c **** 	int DataIdx;
 154              		.loc 1 98 2 is_stmt 1 view .LVU19
  99:Core/Src/syscalls.c **** 
 100:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 155              		.loc 1 100 2 view .LVU20
 156              	.LVL5:
 157              		.loc 1 100 15 is_stmt 0 view .LVU21
 158 0006 0025     		movs	r5, #0
 159              	.LVL6:
 160              	.L9:
 161              		.loc 1 100 20 is_stmt 1 discriminator 1 view .LVU22
 162              		.loc 1 100 2 is_stmt 0 discriminator 1 view .LVU23
 163 0008 B542     		cmp	r5, r6
 164 000a 07DA     		bge	.L12
 101:Core/Src/syscalls.c **** 	{
 102:Core/Src/syscalls.c **** 		*ptr++ = __io_getchar();
 165              		.loc 1 102 3 is_stmt 1 discriminator 3 view .LVU24
 166              		.loc 1 102 12 is_stmt 0 discriminator 3 view .LVU25
 167 000c FFF7FEFF 		bl	__io_getchar
 168              	.LVL7:
 169              		.loc 1 102 7 discriminator 3 view .LVU26
 170 0010 2146     		mov	r1, r4
 171              	.LVL8:
 172              		.loc 1 102 10 discriminator 3 view .LVU27
 173 0012 01F8010B 		strb	r0, [r1], #1
 174              	.LVL9:
 100:Core/Src/syscalls.c **** 	{
 175              		.loc 1 100 35 is_stmt 1 discriminator 3 view .LVU28
 100:Core/Src/syscalls.c **** 	{
 176              		.loc 1 100 42 is_stmt 0 discriminator 3 view .LVU29
 177 0016 0135     		adds	r5, r5, #1
 178              	.LVL10:
 179              		.loc 1 102 7 discriminator 3 view .LVU30
 180 0018 0C46     		mov	r4, r1
 181 001a F5E7     		b	.L9
 182              	.L12:
 103:Core/Src/syscalls.c **** 	}
 104:Core/Src/syscalls.c **** 
 105:Core/Src/syscalls.c **** return len;
 183              		.loc 1 105 1 is_stmt 1 view .LVU31
 106:Core/Src/syscalls.c **** }
 184              		.loc 1 106 1 is_stmt 0 view .LVU32
 185 001c 3046     		mov	r0, r6
 186 001e 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/ccN81rdg.s 			page 6


 187              		.loc 1 106 1 view .LVU33
 188              		.cfi_endproc
 189              	.LFE29:
 191              		.section	.text._write,"ax",%progbits
 192              		.align	1
 193              		.weak	_write
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	_write:
 200              	.LVL11:
 201              	.LFB30:
 107:Core/Src/syscalls.c **** 
 108:Core/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 109:Core/Src/syscalls.c **** {
 202              		.loc 1 109 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		.loc 1 109 1 is_stmt 0 view .LVU35
 207 0000 70B5     		push	{r4, r5, r6, lr}
 208              	.LCFI3:
 209              		.cfi_def_cfa_offset 16
 210              		.cfi_offset 4, -16
 211              		.cfi_offset 5, -12
 212              		.cfi_offset 6, -8
 213              		.cfi_offset 14, -4
 214 0002 0C46     		mov	r4, r1
 215 0004 1646     		mov	r6, r2
 110:Core/Src/syscalls.c **** 	int DataIdx;
 216              		.loc 1 110 2 is_stmt 1 view .LVU36
 111:Core/Src/syscalls.c **** 
 112:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 217              		.loc 1 112 2 view .LVU37
 218              	.LVL12:
 219              		.loc 1 112 15 is_stmt 0 view .LVU38
 220 0006 0025     		movs	r5, #0
 221              	.LVL13:
 222              	.L14:
 223              		.loc 1 112 20 is_stmt 1 discriminator 1 view .LVU39
 224              		.loc 1 112 2 is_stmt 0 discriminator 1 view .LVU40
 225 0008 B542     		cmp	r5, r6
 226 000a 05DA     		bge	.L17
 113:Core/Src/syscalls.c **** 	{
 114:Core/Src/syscalls.c **** 		__io_putchar(*ptr++);
 227              		.loc 1 114 3 is_stmt 1 discriminator 3 view .LVU41
 228              	.LVL14:
 229              		.loc 1 114 3 is_stmt 0 discriminator 3 view .LVU42
 230 000c 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 231              	.LVL15:
 232              		.loc 1 114 3 discriminator 3 view .LVU43
 233 0010 FFF7FEFF 		bl	__io_putchar
 234              	.LVL16:
 112:Core/Src/syscalls.c **** 	{
 235              		.loc 1 112 35 is_stmt 1 discriminator 3 view .LVU44
 112:Core/Src/syscalls.c **** 	{
ARM GAS  /tmp/ccN81rdg.s 			page 7


 236              		.loc 1 112 42 is_stmt 0 discriminator 3 view .LVU45
 237 0014 0135     		adds	r5, r5, #1
 238              	.LVL17:
 112:Core/Src/syscalls.c **** 	{
 239              		.loc 1 112 42 discriminator 3 view .LVU46
 240 0016 F7E7     		b	.L14
 241              	.L17:
 115:Core/Src/syscalls.c **** 	}
 116:Core/Src/syscalls.c **** 	return len;
 242              		.loc 1 116 2 is_stmt 1 view .LVU47
 117:Core/Src/syscalls.c **** }
 243              		.loc 1 117 1 is_stmt 0 view .LVU48
 244 0018 3046     		mov	r0, r6
 245 001a 70BD     		pop	{r4, r5, r6, pc}
 246              		.loc 1 117 1 view .LVU49
 247              		.cfi_endproc
 248              	.LFE30:
 250              		.section	.text._sbrk,"ax",%progbits
 251              		.align	1
 252              		.global	_sbrk
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	_sbrk:
 259              	.LVL18:
 260              	.LFB31:
 118:Core/Src/syscalls.c **** 
 119:Core/Src/syscalls.c **** caddr_t _sbrk(int incr) {
 261              		.loc 1 119 25 is_stmt 1 view -0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		.loc 1 119 25 is_stmt 0 view .LVU51
 266 0000 08B5     		push	{r3, lr}
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 8
 269              		.cfi_offset 3, -8
 270              		.cfi_offset 14, -4
 271 0002 0346     		mov	r3, r0
 120:Core/Src/syscalls.c ****     extern char __heap_start__ asm("end");  // Defined by the linker.
 272              		.loc 1 120 5 is_stmt 1 view .LVU52
 121:Core/Src/syscalls.c ****     static char *heap_end;
 273              		.loc 1 121 5 view .LVU53
 122:Core/Src/syscalls.c ****     char *prev_heap_end;
 274              		.loc 1 122 5 view .LVU54
 123:Core/Src/syscalls.c **** 
 124:Core/Src/syscalls.c ****     if (heap_end == NULL) heap_end = &__heap_start__;
 275              		.loc 1 124 5 view .LVU55
 276              		.loc 1 124 18 is_stmt 0 view .LVU56
 277 0004 0D4A     		ldr	r2, .L25
 278 0006 1268     		ldr	r2, [r2]
 279              		.loc 1 124 8 view .LVU57
 280 0008 5AB1     		cbz	r2, .L23
 281              	.L19:
 125:Core/Src/syscalls.c **** 
 126:Core/Src/syscalls.c ****     prev_heap_end = heap_end;
ARM GAS  /tmp/ccN81rdg.s 			page 8


 282              		.loc 1 126 5 is_stmt 1 view .LVU58
 283              		.loc 1 126 19 is_stmt 0 view .LVU59
 284 000a 0C4A     		ldr	r2, .L25
 285 000c 1068     		ldr	r0, [r2]
 286              	.LVL19:
 127:Core/Src/syscalls.c **** 
 128:Core/Src/syscalls.c ****     if (heap_end + incr > &_estack - _Min_Stack_Size) {
 287              		.loc 1 128 5 is_stmt 1 view .LVU60
 288              		.loc 1 128 18 is_stmt 0 view .LVU61
 289 000e 0344     		add	r3, r3, r0
 290              	.LVL20:
 291              		.loc 1 128 36 view .LVU62
 292 0010 0B4A     		ldr	r2, .L25+4
 293 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 294 0014 0B4A     		ldr	r2, .L25+8
 295 0016 521A     		subs	r2, r2, r1
 296              		.loc 1 128 8 view .LVU63
 297 0018 9342     		cmp	r3, r2
 298 001a 06D8     		bhi	.L24
 129:Core/Src/syscalls.c ****     		__asm("BKPT #0\n");
 130:Core/Src/syscalls.c ****         errno = ENOMEM;
 131:Core/Src/syscalls.c ****         return (caddr_t)-1;
 132:Core/Src/syscalls.c **** 
 133:Core/Src/syscalls.c ****     }
 134:Core/Src/syscalls.c **** 
 135:Core/Src/syscalls.c ****     heap_end += incr;
 299              		.loc 1 135 5 is_stmt 1 view .LVU64
 300              		.loc 1 135 14 is_stmt 0 view .LVU65
 301 001c 074A     		ldr	r2, .L25
 302 001e 1360     		str	r3, [r2]
 136:Core/Src/syscalls.c ****     return (caddr_t)prev_heap_end;
 303              		.loc 1 136 5 is_stmt 1 view .LVU66
 304              	.LVL21:
 305              	.L18:
 137:Core/Src/syscalls.c **** 
 138:Core/Src/syscalls.c **** }
 306              		.loc 1 138 1 is_stmt 0 view .LVU67
 307 0020 08BD     		pop	{r3, pc}
 308              	.LVL22:
 309              	.L23:
 124:Core/Src/syscalls.c **** 
 310              		.loc 1 124 27 is_stmt 1 discriminator 1 view .LVU68
 124:Core/Src/syscalls.c **** 
 311              		.loc 1 124 36 is_stmt 0 discriminator 1 view .LVU69
 312 0022 064A     		ldr	r2, .L25
 313 0024 0849     		ldr	r1, .L25+12
 314 0026 1160     		str	r1, [r2]
 315 0028 EFE7     		b	.L19
 316              	.LVL23:
 317              	.L24:
 129:Core/Src/syscalls.c ****         errno = ENOMEM;
 318              		.loc 1 129 7 is_stmt 1 view .LVU70
 319              		.syntax unified
 320              	@ 129 "Core/Src/syscalls.c" 1
 321 002a 00BE     		BKPT #0
 322              	
 323              	@ 0 "" 2
ARM GAS  /tmp/ccN81rdg.s 			page 9


 130:Core/Src/syscalls.c ****         return (caddr_t)-1;
 324              		.loc 1 130 9 view .LVU71
 325              		.thumb
 326              		.syntax unified
 327 002c FFF7FEFF 		bl	__errno
 328              	.LVL24:
 130:Core/Src/syscalls.c ****         return (caddr_t)-1;
 329              		.loc 1 130 15 is_stmt 0 view .LVU72
 330 0030 0C23     		movs	r3, #12
 331 0032 0360     		str	r3, [r0]
 131:Core/Src/syscalls.c **** 
 332              		.loc 1 131 9 is_stmt 1 view .LVU73
 131:Core/Src/syscalls.c **** 
 333              		.loc 1 131 16 is_stmt 0 view .LVU74
 334 0034 4FF0FF30 		mov	r0, #-1
 335 0038 F2E7     		b	.L18
 336              	.L26:
 337 003a 00BF     		.align	2
 338              	.L25:
 339 003c 00000000 		.word	.LANCHOR0
 340 0040 00000000 		.word	_Min_Stack_Size
 341 0044 00000000 		.word	_estack
 342 0048 00000000 		.word	end
 343              		.cfi_endproc
 344              	.LFE31:
 346              		.section	.text._close,"ax",%progbits
 347              		.align	1
 348              		.global	_close
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu fpv4-sp-d16
 354              	_close:
 355              	.LVL25:
 356              	.LFB32:
 139:Core/Src/syscalls.c **** 
 140:Core/Src/syscalls.c **** int _close(int file)
 141:Core/Src/syscalls.c **** {
 357              		.loc 1 141 1 is_stmt 1 view -0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 142:Core/Src/syscalls.c **** 	return -1;
 362              		.loc 1 142 2 view .LVU76
 143:Core/Src/syscalls.c **** }
 363              		.loc 1 143 1 is_stmt 0 view .LVU77
 364 0000 4FF0FF30 		mov	r0, #-1
 365              	.LVL26:
 366              		.loc 1 143 1 view .LVU78
 367 0004 7047     		bx	lr
 368              		.cfi_endproc
 369              	.LFE32:
 371              		.section	.text._fstat,"ax",%progbits
 372              		.align	1
 373              		.global	_fstat
 374              		.syntax unified
ARM GAS  /tmp/ccN81rdg.s 			page 10


 375              		.thumb
 376              		.thumb_func
 377              		.fpu fpv4-sp-d16
 379              	_fstat:
 380              	.LVL27:
 381              	.LFB33:
 144:Core/Src/syscalls.c **** 
 145:Core/Src/syscalls.c **** 
 146:Core/Src/syscalls.c **** int _fstat(int file, struct stat *st)
 147:Core/Src/syscalls.c **** {
 382              		.loc 1 147 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 148:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 387              		.loc 1 148 2 view .LVU80
 388              		.loc 1 148 14 is_stmt 0 view .LVU81
 389 0000 4FF40053 		mov	r3, #8192
 390 0004 4B60     		str	r3, [r1, #4]
 149:Core/Src/syscalls.c **** 	return 0;
 391              		.loc 1 149 2 is_stmt 1 view .LVU82
 150:Core/Src/syscalls.c **** }
 392              		.loc 1 150 1 is_stmt 0 view .LVU83
 393 0006 0020     		movs	r0, #0
 394              	.LVL28:
 395              		.loc 1 150 1 view .LVU84
 396 0008 7047     		bx	lr
 397              		.cfi_endproc
 398              	.LFE33:
 400              		.section	.text._isatty,"ax",%progbits
 401              		.align	1
 402              		.global	_isatty
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu fpv4-sp-d16
 408              	_isatty:
 409              	.LVL29:
 410              	.LFB34:
 151:Core/Src/syscalls.c **** 
 152:Core/Src/syscalls.c **** int _isatty(int file)
 153:Core/Src/syscalls.c **** {
 411              		.loc 1 153 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 154:Core/Src/syscalls.c **** 	return 1;
 416              		.loc 1 154 2 view .LVU86
 155:Core/Src/syscalls.c **** }
 417              		.loc 1 155 1 is_stmt 0 view .LVU87
 418 0000 0120     		movs	r0, #1
 419              	.LVL30:
 420              		.loc 1 155 1 view .LVU88
 421 0002 7047     		bx	lr
 422              		.cfi_endproc
ARM GAS  /tmp/ccN81rdg.s 			page 11


 423              	.LFE34:
 425              		.section	.text._lseek,"ax",%progbits
 426              		.align	1
 427              		.global	_lseek
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 431              		.fpu fpv4-sp-d16
 433              	_lseek:
 434              	.LVL31:
 435              	.LFB35:
 156:Core/Src/syscalls.c **** 
 157:Core/Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 158:Core/Src/syscalls.c **** {
 436              		.loc 1 158 1 is_stmt 1 view -0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 159:Core/Src/syscalls.c **** 	return 0;
 441              		.loc 1 159 2 view .LVU90
 160:Core/Src/syscalls.c **** }
 442              		.loc 1 160 1 is_stmt 0 view .LVU91
 443 0000 0020     		movs	r0, #0
 444              	.LVL32:
 445              		.loc 1 160 1 view .LVU92
 446 0002 7047     		bx	lr
 447              		.cfi_endproc
 448              	.LFE35:
 450              		.section	.text._open,"ax",%progbits
 451              		.align	1
 452              		.global	_open
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu fpv4-sp-d16
 458              	_open:
 459              	.LVL33:
 460              	.LFB36:
 161:Core/Src/syscalls.c **** 
 162:Core/Src/syscalls.c **** int _open(char *path, int flags, ...)
 163:Core/Src/syscalls.c **** {
 461              		.loc 1 163 1 is_stmt 1 view -0
 462              		.cfi_startproc
 463              		@ args = 4, pretend = 12, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 1
 465              		@ link register save eliminated.
 466              		.loc 1 163 1 is_stmt 0 view .LVU94
 467 0000 0EB4     		push	{r1, r2, r3}
 468              	.LCFI5:
 469              		.cfi_def_cfa_offset 12
 470              		.cfi_offset 1, -12
 471              		.cfi_offset 2, -8
 472              		.cfi_offset 3, -4
 164:Core/Src/syscalls.c **** 	/* Pretend like we always fail */
 165:Core/Src/syscalls.c **** 	return -1;
 473              		.loc 1 165 2 is_stmt 1 view .LVU95
ARM GAS  /tmp/ccN81rdg.s 			page 12


 166:Core/Src/syscalls.c **** }
 474              		.loc 1 166 1 is_stmt 0 view .LVU96
 475 0002 4FF0FF30 		mov	r0, #-1
 476              	.LVL34:
 477              		.loc 1 166 1 view .LVU97
 478 0006 03B0     		add	sp, sp, #12
 479              	.LCFI6:
 480              		.cfi_restore 3
 481              		.cfi_restore 2
 482              		.cfi_restore 1
 483              		.cfi_def_cfa_offset 0
 484 0008 7047     		bx	lr
 485              		.cfi_endproc
 486              	.LFE36:
 488              		.section	.text._wait,"ax",%progbits
 489              		.align	1
 490              		.global	_wait
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 494              		.fpu fpv4-sp-d16
 496              	_wait:
 497              	.LVL35:
 498              	.LFB37:
 167:Core/Src/syscalls.c **** 
 168:Core/Src/syscalls.c **** int _wait(int *status)
 169:Core/Src/syscalls.c **** {
 499              		.loc 1 169 1 is_stmt 1 view -0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 0, uses_anonymous_args = 0
 503              		.loc 1 169 1 is_stmt 0 view .LVU99
 504 0000 08B5     		push	{r3, lr}
 505              	.LCFI7:
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 3, -8
 508              		.cfi_offset 14, -4
 170:Core/Src/syscalls.c **** 	errno = ECHILD;
 509              		.loc 1 170 2 is_stmt 1 view .LVU100
 510 0002 FFF7FEFF 		bl	__errno
 511              	.LVL36:
 512              		.loc 1 170 8 is_stmt 0 view .LVU101
 513 0006 0A23     		movs	r3, #10
 514 0008 0360     		str	r3, [r0]
 171:Core/Src/syscalls.c **** 	return -1;
 515              		.loc 1 171 2 is_stmt 1 view .LVU102
 172:Core/Src/syscalls.c **** }
 516              		.loc 1 172 1 is_stmt 0 view .LVU103
 517 000a 4FF0FF30 		mov	r0, #-1
 518 000e 08BD     		pop	{r3, pc}
 519              		.cfi_endproc
 520              	.LFE37:
 522              		.section	.text._unlink,"ax",%progbits
 523              		.align	1
 524              		.global	_unlink
 525              		.syntax unified
 526              		.thumb
ARM GAS  /tmp/ccN81rdg.s 			page 13


 527              		.thumb_func
 528              		.fpu fpv4-sp-d16
 530              	_unlink:
 531              	.LVL37:
 532              	.LFB38:
 173:Core/Src/syscalls.c **** 
 174:Core/Src/syscalls.c **** int _unlink(char *name)
 175:Core/Src/syscalls.c **** {
 533              		.loc 1 175 1 is_stmt 1 view -0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		.loc 1 175 1 is_stmt 0 view .LVU105
 538 0000 08B5     		push	{r3, lr}
 539              	.LCFI8:
 540              		.cfi_def_cfa_offset 8
 541              		.cfi_offset 3, -8
 542              		.cfi_offset 14, -4
 176:Core/Src/syscalls.c **** 	errno = ENOENT;
 543              		.loc 1 176 2 is_stmt 1 view .LVU106
 544 0002 FFF7FEFF 		bl	__errno
 545              	.LVL38:
 546              		.loc 1 176 8 is_stmt 0 view .LVU107
 547 0006 0223     		movs	r3, #2
 548 0008 0360     		str	r3, [r0]
 177:Core/Src/syscalls.c **** 	return -1;
 549              		.loc 1 177 2 is_stmt 1 view .LVU108
 178:Core/Src/syscalls.c **** }
 550              		.loc 1 178 1 is_stmt 0 view .LVU109
 551 000a 4FF0FF30 		mov	r0, #-1
 552 000e 08BD     		pop	{r3, pc}
 553              		.cfi_endproc
 554              	.LFE38:
 556              		.section	.text._times,"ax",%progbits
 557              		.align	1
 558              		.global	_times
 559              		.syntax unified
 560              		.thumb
 561              		.thumb_func
 562              		.fpu fpv4-sp-d16
 564              	_times:
 565              	.LVL39:
 566              	.LFB39:
 179:Core/Src/syscalls.c **** 
 180:Core/Src/syscalls.c **** int _times(struct tms *buf)
 181:Core/Src/syscalls.c **** {
 567              		.loc 1 181 1 is_stmt 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 182:Core/Src/syscalls.c **** 	return -1;
 572              		.loc 1 182 2 view .LVU111
 183:Core/Src/syscalls.c **** }
 573              		.loc 1 183 1 is_stmt 0 view .LVU112
 574 0000 4FF0FF30 		mov	r0, #-1
 575              	.LVL40:
ARM GAS  /tmp/ccN81rdg.s 			page 14


 576              		.loc 1 183 1 view .LVU113
 577 0004 7047     		bx	lr
 578              		.cfi_endproc
 579              	.LFE39:
 581              		.section	.text._stat,"ax",%progbits
 582              		.align	1
 583              		.global	_stat
 584              		.syntax unified
 585              		.thumb
 586              		.thumb_func
 587              		.fpu fpv4-sp-d16
 589              	_stat:
 590              	.LVL41:
 591              	.LFB40:
 184:Core/Src/syscalls.c **** 
 185:Core/Src/syscalls.c **** int _stat(char *file, struct stat *st)
 186:Core/Src/syscalls.c **** {
 592              		.loc 1 186 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		@ link register save eliminated.
 187:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 597              		.loc 1 187 2 view .LVU115
 598              		.loc 1 187 14 is_stmt 0 view .LVU116
 599 0000 4FF40053 		mov	r3, #8192
 600 0004 4B60     		str	r3, [r1, #4]
 188:Core/Src/syscalls.c **** 	return 0;
 601              		.loc 1 188 2 is_stmt 1 view .LVU117
 189:Core/Src/syscalls.c **** }
 602              		.loc 1 189 1 is_stmt 0 view .LVU118
 603 0006 0020     		movs	r0, #0
 604              	.LVL42:
 605              		.loc 1 189 1 view .LVU119
 606 0008 7047     		bx	lr
 607              		.cfi_endproc
 608              	.LFE40:
 610              		.section	.text._link,"ax",%progbits
 611              		.align	1
 612              		.global	_link
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 616              		.fpu fpv4-sp-d16
 618              	_link:
 619              	.LVL43:
 620              	.LFB41:
 190:Core/Src/syscalls.c **** 
 191:Core/Src/syscalls.c **** int _link(char *old, char *new)
 192:Core/Src/syscalls.c **** {
 621              		.loc 1 192 1 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		.loc 1 192 1 is_stmt 0 view .LVU121
 626 0000 08B5     		push	{r3, lr}
 627              	.LCFI9:
ARM GAS  /tmp/ccN81rdg.s 			page 15


 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 3, -8
 630              		.cfi_offset 14, -4
 193:Core/Src/syscalls.c **** 	errno = EMLINK;
 631              		.loc 1 193 2 is_stmt 1 view .LVU122
 632 0002 FFF7FEFF 		bl	__errno
 633              	.LVL44:
 634              		.loc 1 193 8 is_stmt 0 view .LVU123
 635 0006 1F23     		movs	r3, #31
 636 0008 0360     		str	r3, [r0]
 194:Core/Src/syscalls.c **** 	return -1;
 637              		.loc 1 194 2 is_stmt 1 view .LVU124
 195:Core/Src/syscalls.c **** }
 638              		.loc 1 195 1 is_stmt 0 view .LVU125
 639 000a 4FF0FF30 		mov	r0, #-1
 640 000e 08BD     		pop	{r3, pc}
 641              		.cfi_endproc
 642              	.LFE41:
 644              		.section	.text._fork,"ax",%progbits
 645              		.align	1
 646              		.global	_fork
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 650              		.fpu fpv4-sp-d16
 652              	_fork:
 653              	.LFB42:
 196:Core/Src/syscalls.c **** 
 197:Core/Src/syscalls.c **** int _fork(void)
 198:Core/Src/syscalls.c **** {
 654              		.loc 1 198 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658 0000 08B5     		push	{r3, lr}
 659              	.LCFI10:
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 3, -8
 662              		.cfi_offset 14, -4
 199:Core/Src/syscalls.c **** 	errno = EAGAIN;
 663              		.loc 1 199 2 view .LVU127
 664 0002 FFF7FEFF 		bl	__errno
 665              	.LVL45:
 666              		.loc 1 199 8 is_stmt 0 view .LVU128
 667 0006 0B23     		movs	r3, #11
 668 0008 0360     		str	r3, [r0]
 200:Core/Src/syscalls.c **** 	return -1;
 669              		.loc 1 200 2 is_stmt 1 view .LVU129
 201:Core/Src/syscalls.c **** }
 670              		.loc 1 201 1 is_stmt 0 view .LVU130
 671 000a 4FF0FF30 		mov	r0, #-1
 672 000e 08BD     		pop	{r3, pc}
 673              		.cfi_endproc
 674              	.LFE42:
 676              		.section	.text._execve,"ax",%progbits
 677              		.align	1
 678              		.global	_execve
ARM GAS  /tmp/ccN81rdg.s 			page 16


 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu fpv4-sp-d16
 684              	_execve:
 685              	.LVL46:
 686              	.LFB43:
 202:Core/Src/syscalls.c **** 
 203:Core/Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 204:Core/Src/syscalls.c **** {
 687              		.loc 1 204 1 is_stmt 1 view -0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		.loc 1 204 1 is_stmt 0 view .LVU132
 692 0000 08B5     		push	{r3, lr}
 693              	.LCFI11:
 694              		.cfi_def_cfa_offset 8
 695              		.cfi_offset 3, -8
 696              		.cfi_offset 14, -4
 205:Core/Src/syscalls.c **** 	errno = ENOMEM;
 697              		.loc 1 205 2 is_stmt 1 view .LVU133
 698 0002 FFF7FEFF 		bl	__errno
 699              	.LVL47:
 700              		.loc 1 205 8 is_stmt 0 view .LVU134
 701 0006 0C23     		movs	r3, #12
 702 0008 0360     		str	r3, [r0]
 206:Core/Src/syscalls.c **** 	return -1;
 703              		.loc 1 206 2 is_stmt 1 view .LVU135
 207:Core/Src/syscalls.c **** }...
 704              		.loc 1 207 1 is_stmt 0 view .LVU136
 705 000a 4FF0FF30 		mov	r0, #-1
 706 000e 08BD     		pop	{r3, pc}
 707              		.cfi_endproc
 708              	.LFE43:
 710              		.global	environ
 711              		.global	__env
 712              		.section	.bss.__env,"aw",%nobits
 713              		.align	2
 716              	__env:
 717 0000 00000000 		.space	4
 718              		.section	.bss.heap_end.7365,"aw",%nobits
 719              		.align	2
 720              		.set	.LANCHOR0,. + 0
 723              	heap_end.7365:
 724 0000 00000000 		.space	4
 725              		.section	.data.environ,"aw"
 726              		.align	2
 729              	environ:
 730 0000 00000000 		.word	__env
 731              		.weak	__io_putchar
 732              		.weak	__io_getchar
 733              		.text
 734              	.Letext0:
 735              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 736              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 737              		.file 4 "/usr/include/newlib/sys/_types.h"
ARM GAS  /tmp/ccN81rdg.s 			page 17


 738              		.file 5 "/usr/include/newlib/sys/reent.h"
 739              		.file 6 "/usr/include/newlib/sys/lock.h"
 740              		.file 7 "/usr/include/newlib/sys/_timeval.h"
 741              		.file 8 "/usr/include/newlib/sys/_timespec.h"
 742              		.file 9 "/usr/include/newlib/sys/types.h"
 743              		.file 10 "/usr/include/newlib/time.h"
 744              		.file 11 "/usr/include/newlib/sys/stat.h"
 745              		.file 12 "/usr/include/newlib/stdlib.h"
 746              		.file 13 "/usr/include/newlib/sys/errno.h"
 747              		.file 14 "/usr/include/newlib/sys/times.h"
ARM GAS  /tmp/ccN81rdg.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/ccN81rdg.s:18     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/ccN81rdg.s:26     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/ccN81rdg.s:40     .text._getpid:0000000000000000 $t
     /tmp/ccN81rdg.s:47     .text._getpid:0000000000000000 _getpid
     /tmp/ccN81rdg.s:62     .text._kill:0000000000000000 $t
     /tmp/ccN81rdg.s:69     .text._kill:0000000000000000 _kill
     /tmp/ccN81rdg.s:96     .text._exit:0000000000000000 $t
     /tmp/ccN81rdg.s:103    .text._exit:0000000000000000 _exit
     /tmp/ccN81rdg.s:130    .text._read:0000000000000000 $t
     /tmp/ccN81rdg.s:137    .text._read:0000000000000000 _read
     /tmp/ccN81rdg.s:192    .text._write:0000000000000000 $t
     /tmp/ccN81rdg.s:199    .text._write:0000000000000000 _write
     /tmp/ccN81rdg.s:251    .text._sbrk:0000000000000000 $t
     /tmp/ccN81rdg.s:258    .text._sbrk:0000000000000000 _sbrk
     /tmp/ccN81rdg.s:339    .text._sbrk:000000000000003c $d
     /tmp/ccN81rdg.s:347    .text._close:0000000000000000 $t
     /tmp/ccN81rdg.s:354    .text._close:0000000000000000 _close
     /tmp/ccN81rdg.s:372    .text._fstat:0000000000000000 $t
     /tmp/ccN81rdg.s:379    .text._fstat:0000000000000000 _fstat
     /tmp/ccN81rdg.s:401    .text._isatty:0000000000000000 $t
     /tmp/ccN81rdg.s:408    .text._isatty:0000000000000000 _isatty
     /tmp/ccN81rdg.s:426    .text._lseek:0000000000000000 $t
     /tmp/ccN81rdg.s:433    .text._lseek:0000000000000000 _lseek
     /tmp/ccN81rdg.s:451    .text._open:0000000000000000 $t
     /tmp/ccN81rdg.s:458    .text._open:0000000000000000 _open
     /tmp/ccN81rdg.s:489    .text._wait:0000000000000000 $t
     /tmp/ccN81rdg.s:496    .text._wait:0000000000000000 _wait
     /tmp/ccN81rdg.s:523    .text._unlink:0000000000000000 $t
     /tmp/ccN81rdg.s:530    .text._unlink:0000000000000000 _unlink
     /tmp/ccN81rdg.s:557    .text._times:0000000000000000 $t
     /tmp/ccN81rdg.s:564    .text._times:0000000000000000 _times
     /tmp/ccN81rdg.s:582    .text._stat:0000000000000000 $t
     /tmp/ccN81rdg.s:589    .text._stat:0000000000000000 _stat
     /tmp/ccN81rdg.s:611    .text._link:0000000000000000 $t
     /tmp/ccN81rdg.s:618    .text._link:0000000000000000 _link
     /tmp/ccN81rdg.s:645    .text._fork:0000000000000000 $t
     /tmp/ccN81rdg.s:652    .text._fork:0000000000000000 _fork
     /tmp/ccN81rdg.s:677    .text._execve:0000000000000000 $t
     /tmp/ccN81rdg.s:684    .text._execve:0000000000000000 _execve
     /tmp/ccN81rdg.s:729    .data.environ:0000000000000000 environ
     /tmp/ccN81rdg.s:716    .bss.__env:0000000000000000 __env
     /tmp/ccN81rdg.s:713    .bss.__env:0000000000000000 $d
     /tmp/ccN81rdg.s:719    .bss.heap_end.7365:0000000000000000 $d
     /tmp/ccN81rdg.s:723    .bss.heap_end.7365:0000000000000000 heap_end.7365
     /tmp/ccN81rdg.s:726    .data.environ:0000000000000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
_Min_Stack_Size
_estack
end
