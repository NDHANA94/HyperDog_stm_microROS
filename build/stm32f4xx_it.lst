ARM GAS  /tmp/ccU2WBTd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB235:
  28              		.file 1 "Core/Src/stm32f4xx_it.c"
   1:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f4xx_it.c **** /**
   3:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Core/Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f4xx_it.c ****   * @attention
   8:Core/Src/stm32f4xx_it.c ****   *
   9:Core/Src/stm32f4xx_it.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f4xx_it.c ****   *
  12:Core/Src/stm32f4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f4xx_it.c ****   *
  16:Core/Src/stm32f4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f4xx_it.c ****   */
  18:Core/Src/stm32f4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f4xx_it.c **** 
  20:Core/Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f4xx_it.c **** #include "main.h"
  22:Core/Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  23:Core/Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f4xx_it.c **** 
  27:Core/Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f4xx_it.c **** 
  30:Core/Src/stm32f4xx_it.c **** /* USER CODE END TD */
ARM GAS  /tmp/ccU2WBTd.s 			page 2


  31:Core/Src/stm32f4xx_it.c **** 
  32:Core/Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f4xx_it.c **** 
  35:Core/Src/stm32f4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f4xx_it.c **** 
  37:Core/Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f4xx_it.c **** 
  40:Core/Src/stm32f4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f4xx_it.c **** 
  42:Core/Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f4xx_it.c **** 
  45:Core/Src/stm32f4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f4xx_it.c **** 
  47:Core/Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f4xx_it.c **** 
  50:Core/Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f4xx_it.c **** 
  52:Core/Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f4xx_it.c **** 
  55:Core/Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f4xx_it.c **** 
  57:Core/Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f4xx_it.c **** extern HCD_HandleTypeDef hhcd_USB_OTG_FS;
  59:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  60:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  61:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_rx;
  62:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart2_tx;
  63:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_rx;
  64:Core/Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_usart6_tx;
  65:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart1;
  66:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart2;
  67:Core/Src/stm32f4xx_it.c **** extern UART_HandleTypeDef huart6;
  68:Core/Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  69:Core/Src/stm32f4xx_it.c **** 
  70:Core/Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  71:Core/Src/stm32f4xx_it.c **** 
  72:Core/Src/stm32f4xx_it.c **** /* USER CODE END EV */
  73:Core/Src/stm32f4xx_it.c **** 
  74:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  75:Core/Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  76:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
  77:Core/Src/stm32f4xx_it.c **** /**
  78:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  79:Core/Src/stm32f4xx_it.c ****   */
  80:Core/Src/stm32f4xx_it.c **** void NMI_Handler(void)
  81:Core/Src/stm32f4xx_it.c **** {
  29              		.loc 1 81 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
ARM GAS  /tmp/ccU2WBTd.s 			page 3


  35              	.L2:
  82:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  83:Core/Src/stm32f4xx_it.c **** 
  84:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  85:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  86:Core/Src/stm32f4xx_it.c ****   while (1)
  36              		.loc 1 86 3 discriminator 1 view .LVU1
  87:Core/Src/stm32f4xx_it.c ****   {
  88:Core/Src/stm32f4xx_it.c ****   }
  37              		.loc 1 88 3 discriminator 1 view .LVU2
  86:Core/Src/stm32f4xx_it.c ****   {
  38              		.loc 1 86 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE235:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  49              		.fpu fpv4-sp-d16
  51              	HardFault_Handler:
  52              	.LFB236:
  89:Core/Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  90:Core/Src/stm32f4xx_it.c **** }
  91:Core/Src/stm32f4xx_it.c **** 
  92:Core/Src/stm32f4xx_it.c **** /**
  93:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  94:Core/Src/stm32f4xx_it.c ****   */
  95:Core/Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  96:Core/Src/stm32f4xx_it.c **** {
  53              		.loc 1 96 1 view -0
  54              		.cfi_startproc
  55              		@ Volatile: function does not return.
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.L4:
  97:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  98:Core/Src/stm32f4xx_it.c **** 
  99:Core/Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 100:Core/Src/stm32f4xx_it.c ****   while (1)
  60              		.loc 1 100 3 discriminator 1 view .LVU5
 101:Core/Src/stm32f4xx_it.c ****   {
 102:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 103:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 104:Core/Src/stm32f4xx_it.c ****   }
  61              		.loc 1 104 3 discriminator 1 view .LVU6
 100:Core/Src/stm32f4xx_it.c ****   {
  62              		.loc 1 100 9 discriminator 1 view .LVU7
  63 0000 FEE7     		b	.L4
  64              		.cfi_endproc
  65              	.LFE236:
  67              		.section	.text.MemManage_Handler,"ax",%progbits
  68              		.align	1
  69              		.global	MemManage_Handler
ARM GAS  /tmp/ccU2WBTd.s 			page 4


  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv4-sp-d16
  75              	MemManage_Handler:
  76              	.LFB237:
 105:Core/Src/stm32f4xx_it.c **** }
 106:Core/Src/stm32f4xx_it.c **** 
 107:Core/Src/stm32f4xx_it.c **** /**
 108:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 109:Core/Src/stm32f4xx_it.c ****   */
 110:Core/Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 111:Core/Src/stm32f4xx_it.c **** {
  77              		.loc 1 111 1 view -0
  78              		.cfi_startproc
  79              		@ Volatile: function does not return.
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.L6:
 112:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 113:Core/Src/stm32f4xx_it.c **** 
 114:Core/Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 115:Core/Src/stm32f4xx_it.c ****   while (1)
  84              		.loc 1 115 3 discriminator 1 view .LVU9
 116:Core/Src/stm32f4xx_it.c ****   {
 117:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 118:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 119:Core/Src/stm32f4xx_it.c ****   }
  85              		.loc 1 119 3 discriminator 1 view .LVU10
 115:Core/Src/stm32f4xx_it.c ****   {
  86              		.loc 1 115 9 discriminator 1 view .LVU11
  87 0000 FEE7     		b	.L6
  88              		.cfi_endproc
  89              	.LFE237:
  91              		.section	.text.BusFault_Handler,"ax",%progbits
  92              		.align	1
  93              		.global	BusFault_Handler
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  97              		.fpu fpv4-sp-d16
  99              	BusFault_Handler:
 100              	.LFB238:
 120:Core/Src/stm32f4xx_it.c **** }
 121:Core/Src/stm32f4xx_it.c **** 
 122:Core/Src/stm32f4xx_it.c **** /**
 123:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 124:Core/Src/stm32f4xx_it.c ****   */
 125:Core/Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 126:Core/Src/stm32f4xx_it.c **** {
 101              		.loc 1 126 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		@ link register save eliminated.
ARM GAS  /tmp/ccU2WBTd.s 			page 5


 107              	.L8:
 127:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 128:Core/Src/stm32f4xx_it.c **** 
 129:Core/Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 130:Core/Src/stm32f4xx_it.c ****   while (1)
 108              		.loc 1 130 3 discriminator 1 view .LVU13
 131:Core/Src/stm32f4xx_it.c ****   {
 132:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 133:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 134:Core/Src/stm32f4xx_it.c ****   }
 109              		.loc 1 134 3 discriminator 1 view .LVU14
 130:Core/Src/stm32f4xx_it.c ****   {
 110              		.loc 1 130 9 discriminator 1 view .LVU15
 111 0000 FEE7     		b	.L8
 112              		.cfi_endproc
 113              	.LFE238:
 115              		.section	.text.UsageFault_Handler,"ax",%progbits
 116              		.align	1
 117              		.global	UsageFault_Handler
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 121              		.fpu fpv4-sp-d16
 123              	UsageFault_Handler:
 124              	.LFB239:
 135:Core/Src/stm32f4xx_it.c **** }
 136:Core/Src/stm32f4xx_it.c **** 
 137:Core/Src/stm32f4xx_it.c **** /**
 138:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 139:Core/Src/stm32f4xx_it.c ****   */
 140:Core/Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 141:Core/Src/stm32f4xx_it.c **** {
 125              		.loc 1 141 1 view -0
 126              		.cfi_startproc
 127              		@ Volatile: function does not return.
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.L10:
 142:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 143:Core/Src/stm32f4xx_it.c **** 
 144:Core/Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 145:Core/Src/stm32f4xx_it.c ****   while (1)
 132              		.loc 1 145 3 discriminator 1 view .LVU17
 146:Core/Src/stm32f4xx_it.c ****   {
 147:Core/Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 148:Core/Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 149:Core/Src/stm32f4xx_it.c ****   }
 133              		.loc 1 149 3 discriminator 1 view .LVU18
 145:Core/Src/stm32f4xx_it.c ****   {
 134              		.loc 1 145 9 discriminator 1 view .LVU19
 135 0000 FEE7     		b	.L10
 136              		.cfi_endproc
 137              	.LFE239:
 139              		.section	.text.DebugMon_Handler,"ax",%progbits
 140              		.align	1
 141              		.global	DebugMon_Handler
ARM GAS  /tmp/ccU2WBTd.s 			page 6


 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
 145              		.fpu fpv4-sp-d16
 147              	DebugMon_Handler:
 148              	.LFB240:
 150:Core/Src/stm32f4xx_it.c **** }
 151:Core/Src/stm32f4xx_it.c **** 
 152:Core/Src/stm32f4xx_it.c **** /**
 153:Core/Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 154:Core/Src/stm32f4xx_it.c ****   */
 155:Core/Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 156:Core/Src/stm32f4xx_it.c **** {
 149              		.loc 1 156 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 157:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 158:Core/Src/stm32f4xx_it.c **** 
 159:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 160:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 161:Core/Src/stm32f4xx_it.c **** 
 162:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 163:Core/Src/stm32f4xx_it.c **** }
 154              		.loc 1 163 1 view .LVU21
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE240:
 159              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 160              		.align	1
 161              		.global	DMA1_Stream5_IRQHandler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	DMA1_Stream5_IRQHandler:
 168              	.LFB241:
 164:Core/Src/stm32f4xx_it.c **** 
 165:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 166:Core/Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 167:Core/Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 168:Core/Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 169:Core/Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 170:Core/Src/stm32f4xx_it.c **** /******************************************************************************/
 171:Core/Src/stm32f4xx_it.c **** 
 172:Core/Src/stm32f4xx_it.c **** /**
 173:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 174:Core/Src/stm32f4xx_it.c ****   */
 175:Core/Src/stm32f4xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 176:Core/Src/stm32f4xx_it.c **** {
 169              		.loc 1 176 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 08B5     		push	{r3, lr}
 174              	.LCFI0:
ARM GAS  /tmp/ccU2WBTd.s 			page 7


 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 3, -8
 177              		.cfi_offset 14, -4
 177:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 178:Core/Src/stm32f4xx_it.c **** 
 179:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 180:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_rx);
 178              		.loc 1 180 3 view .LVU23
 179 0002 0248     		ldr	r0, .L14
 180 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 181              	.LVL0:
 181:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */
 182:Core/Src/stm32f4xx_it.c **** 
 183:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 1 */
 184:Core/Src/stm32f4xx_it.c **** }
 182              		.loc 1 184 1 is_stmt 0 view .LVU24
 183 0008 08BD     		pop	{r3, pc}
 184              	.L15:
 185 000a 00BF     		.align	2
 186              	.L14:
 187 000c 00000000 		.word	hdma_usart2_rx
 188              		.cfi_endproc
 189              	.LFE241:
 191              		.section	.text.DMA1_Stream6_IRQHandler,"ax",%progbits
 192              		.align	1
 193              		.global	DMA1_Stream6_IRQHandler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu fpv4-sp-d16
 199              	DMA1_Stream6_IRQHandler:
 200              	.LFB242:
 185:Core/Src/stm32f4xx_it.c **** 
 186:Core/Src/stm32f4xx_it.c **** /**
 187:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream6 global interrupt.
 188:Core/Src/stm32f4xx_it.c ****   */
 189:Core/Src/stm32f4xx_it.c **** void DMA1_Stream6_IRQHandler(void)
 190:Core/Src/stm32f4xx_it.c **** {
 201              		.loc 1 190 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205 0000 08B5     		push	{r3, lr}
 206              	.LCFI1:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 3, -8
 209              		.cfi_offset 14, -4
 191:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 0 */
 192:Core/Src/stm32f4xx_it.c **** 
 193:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 0 */
 194:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart2_tx);
 210              		.loc 1 194 3 view .LVU26
 211 0002 0248     		ldr	r0, .L18
 212 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 213              	.LVL1:
 195:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream6_IRQn 1 */
 196:Core/Src/stm32f4xx_it.c **** 
ARM GAS  /tmp/ccU2WBTd.s 			page 8


 197:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream6_IRQn 1 */
 198:Core/Src/stm32f4xx_it.c **** }
 214              		.loc 1 198 1 is_stmt 0 view .LVU27
 215 0008 08BD     		pop	{r3, pc}
 216              	.L19:
 217 000a 00BF     		.align	2
 218              	.L18:
 219 000c 00000000 		.word	hdma_usart2_tx
 220              		.cfi_endproc
 221              	.LFE242:
 223              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 224              		.align	1
 225              		.global	TIM1_UP_TIM10_IRQHandler
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	TIM1_UP_TIM10_IRQHandler:
 232              	.LFB243:
 199:Core/Src/stm32f4xx_it.c **** 
 200:Core/Src/stm32f4xx_it.c **** /**
 201:Core/Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 202:Core/Src/stm32f4xx_it.c ****   */
 203:Core/Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 204:Core/Src/stm32f4xx_it.c **** {
 233              		.loc 1 204 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 08B5     		push	{r3, lr}
 238              	.LCFI2:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 3, -8
 241              		.cfi_offset 14, -4
 205:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 206:Core/Src/stm32f4xx_it.c **** 
 207:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 208:Core/Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 242              		.loc 1 208 3 view .LVU29
 243 0002 0248     		ldr	r0, .L22
 244 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 245              	.LVL2:
 209:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 210:Core/Src/stm32f4xx_it.c **** 
 211:Core/Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 212:Core/Src/stm32f4xx_it.c **** }
 246              		.loc 1 212 1 is_stmt 0 view .LVU30
 247 0008 08BD     		pop	{r3, pc}
 248              	.L23:
 249 000a 00BF     		.align	2
 250              	.L22:
 251 000c 00000000 		.word	htim1
 252              		.cfi_endproc
 253              	.LFE243:
 255              		.section	.text.USART1_IRQHandler,"ax",%progbits
 256              		.align	1
 257              		.global	USART1_IRQHandler
ARM GAS  /tmp/ccU2WBTd.s 			page 9


 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu fpv4-sp-d16
 263              	USART1_IRQHandler:
 264              	.LFB244:
 213:Core/Src/stm32f4xx_it.c **** 
 214:Core/Src/stm32f4xx_it.c **** /**
 215:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART1 global interrupt.
 216:Core/Src/stm32f4xx_it.c ****   */
 217:Core/Src/stm32f4xx_it.c **** void USART1_IRQHandler(void)
 218:Core/Src/stm32f4xx_it.c **** {
 265              		.loc 1 218 1 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269 0000 08B5     		push	{r3, lr}
 270              	.LCFI3:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 219:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 220:Core/Src/stm32f4xx_it.c **** 
 221:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 222:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 274              		.loc 1 222 3 view .LVU32
 275 0002 0248     		ldr	r0, .L26
 276 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 277              	.LVL3:
 223:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 224:Core/Src/stm32f4xx_it.c **** 
 225:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 226:Core/Src/stm32f4xx_it.c **** }
 278              		.loc 1 226 1 is_stmt 0 view .LVU33
 279 0008 08BD     		pop	{r3, pc}
 280              	.L27:
 281 000a 00BF     		.align	2
 282              	.L26:
 283 000c 00000000 		.word	huart1
 284              		.cfi_endproc
 285              	.LFE244:
 287              		.section	.text.USART2_IRQHandler,"ax",%progbits
 288              		.align	1
 289              		.global	USART2_IRQHandler
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu fpv4-sp-d16
 295              	USART2_IRQHandler:
 296              	.LFB245:
 227:Core/Src/stm32f4xx_it.c **** 
 228:Core/Src/stm32f4xx_it.c **** /**
 229:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART2 global interrupt.
 230:Core/Src/stm32f4xx_it.c ****   */
 231:Core/Src/stm32f4xx_it.c **** void USART2_IRQHandler(void)
 232:Core/Src/stm32f4xx_it.c **** {
 297              		.loc 1 232 1 is_stmt 1 view -0
ARM GAS  /tmp/ccU2WBTd.s 			page 10


 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301 0000 08B5     		push	{r3, lr}
 302              	.LCFI4:
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 3, -8
 305              		.cfi_offset 14, -4
 233:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 234:Core/Src/stm32f4xx_it.c **** 
 235:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 236:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 306              		.loc 1 236 3 view .LVU35
 307 0002 0248     		ldr	r0, .L30
 308 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 309              	.LVL4:
 237:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 238:Core/Src/stm32f4xx_it.c **** 
 239:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 240:Core/Src/stm32f4xx_it.c **** }
 310              		.loc 1 240 1 is_stmt 0 view .LVU36
 311 0008 08BD     		pop	{r3, pc}
 312              	.L31:
 313 000a 00BF     		.align	2
 314              	.L30:
 315 000c 00000000 		.word	huart2
 316              		.cfi_endproc
 317              	.LFE245:
 319              		.section	.text.DMA2_Stream1_IRQHandler,"ax",%progbits
 320              		.align	1
 321              		.global	DMA2_Stream1_IRQHandler
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	DMA2_Stream1_IRQHandler:
 328              	.LFB246:
 241:Core/Src/stm32f4xx_it.c **** 
 242:Core/Src/stm32f4xx_it.c **** /**
 243:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream1 global interrupt.
 244:Core/Src/stm32f4xx_it.c ****   */
 245:Core/Src/stm32f4xx_it.c **** void DMA2_Stream1_IRQHandler(void)
 246:Core/Src/stm32f4xx_it.c **** {
 329              		.loc 1 246 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI5:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 247:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 0 */
 248:Core/Src/stm32f4xx_it.c **** 
 249:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 0 */
 250:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_rx);
 338              		.loc 1 250 3 view .LVU38
ARM GAS  /tmp/ccU2WBTd.s 			page 11


 339 0002 0248     		ldr	r0, .L34
 340 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 341              	.LVL5:
 251:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream1_IRQn 1 */
 252:Core/Src/stm32f4xx_it.c **** 
 253:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream1_IRQn 1 */
 254:Core/Src/stm32f4xx_it.c **** }
 342              		.loc 1 254 1 is_stmt 0 view .LVU39
 343 0008 08BD     		pop	{r3, pc}
 344              	.L35:
 345 000a 00BF     		.align	2
 346              	.L34:
 347 000c 00000000 		.word	hdma_usart6_rx
 348              		.cfi_endproc
 349              	.LFE246:
 351              		.section	.text.DMA2_Stream2_IRQHandler,"ax",%progbits
 352              		.align	1
 353              		.global	DMA2_Stream2_IRQHandler
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 357              		.fpu fpv4-sp-d16
 359              	DMA2_Stream2_IRQHandler:
 360              	.LFB247:
 255:Core/Src/stm32f4xx_it.c **** 
 256:Core/Src/stm32f4xx_it.c **** /**
 257:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream2 global interrupt.
 258:Core/Src/stm32f4xx_it.c ****   */
 259:Core/Src/stm32f4xx_it.c **** void DMA2_Stream2_IRQHandler(void)
 260:Core/Src/stm32f4xx_it.c **** {
 361              		.loc 1 260 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365 0000 08B5     		push	{r3, lr}
 366              	.LCFI6:
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 261:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 0 */
 262:Core/Src/stm32f4xx_it.c **** 
 263:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 0 */
 264:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 370              		.loc 1 264 3 view .LVU41
 371 0002 0248     		ldr	r0, .L38
 372 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 373              	.LVL6:
 265:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream2_IRQn 1 */
 266:Core/Src/stm32f4xx_it.c **** 
 267:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream2_IRQn 1 */
 268:Core/Src/stm32f4xx_it.c **** }
 374              		.loc 1 268 1 is_stmt 0 view .LVU42
 375 0008 08BD     		pop	{r3, pc}
 376              	.L39:
 377 000a 00BF     		.align	2
 378              	.L38:
 379 000c 00000000 		.word	hdma_usart1_rx
ARM GAS  /tmp/ccU2WBTd.s 			page 12


 380              		.cfi_endproc
 381              	.LFE247:
 383              		.section	.text.OTG_FS_IRQHandler,"ax",%progbits
 384              		.align	1
 385              		.global	OTG_FS_IRQHandler
 386              		.syntax unified
 387              		.thumb
 388              		.thumb_func
 389              		.fpu fpv4-sp-d16
 391              	OTG_FS_IRQHandler:
 392              	.LFB248:
 269:Core/Src/stm32f4xx_it.c **** 
 270:Core/Src/stm32f4xx_it.c **** /**
 271:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USB On The Go FS global interrupt.
 272:Core/Src/stm32f4xx_it.c ****   */
 273:Core/Src/stm32f4xx_it.c **** void OTG_FS_IRQHandler(void)
 274:Core/Src/stm32f4xx_it.c **** {
 393              		.loc 1 274 1 is_stmt 1 view -0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397 0000 08B5     		push	{r3, lr}
 398              	.LCFI7:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 3, -8
 401              		.cfi_offset 14, -4
 275:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 0 */
 276:Core/Src/stm32f4xx_it.c **** 
 277:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 0 */
 278:Core/Src/stm32f4xx_it.c ****   HAL_HCD_IRQHandler(&hhcd_USB_OTG_FS);
 402              		.loc 1 278 3 view .LVU44
 403 0002 0248     		ldr	r0, .L42
 404 0004 FFF7FEFF 		bl	HAL_HCD_IRQHandler
 405              	.LVL7:
 279:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN OTG_FS_IRQn 1 */
 280:Core/Src/stm32f4xx_it.c **** 
 281:Core/Src/stm32f4xx_it.c ****   /* USER CODE END OTG_FS_IRQn 1 */
 282:Core/Src/stm32f4xx_it.c **** }
 406              		.loc 1 282 1 is_stmt 0 view .LVU45
 407 0008 08BD     		pop	{r3, pc}
 408              	.L43:
 409 000a 00BF     		.align	2
 410              	.L42:
 411 000c 00000000 		.word	hhcd_USB_OTG_FS
 412              		.cfi_endproc
 413              	.LFE248:
 415              		.section	.text.DMA2_Stream6_IRQHandler,"ax",%progbits
 416              		.align	1
 417              		.global	DMA2_Stream6_IRQHandler
 418              		.syntax unified
 419              		.thumb
 420              		.thumb_func
 421              		.fpu fpv4-sp-d16
 423              	DMA2_Stream6_IRQHandler:
 424              	.LFB249:
 283:Core/Src/stm32f4xx_it.c **** 
 284:Core/Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccU2WBTd.s 			page 13


 285:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream6 global interrupt.
 286:Core/Src/stm32f4xx_it.c ****   */
 287:Core/Src/stm32f4xx_it.c **** void DMA2_Stream6_IRQHandler(void)
 288:Core/Src/stm32f4xx_it.c **** {
 425              		.loc 1 288 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429 0000 08B5     		push	{r3, lr}
 430              	.LCFI8:
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 3, -8
 433              		.cfi_offset 14, -4
 289:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 0 */
 290:Core/Src/stm32f4xx_it.c **** 
 291:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 0 */
 292:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart6_tx);
 434              		.loc 1 292 3 view .LVU47
 435 0002 0248     		ldr	r0, .L46
 436 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 437              	.LVL8:
 293:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream6_IRQn 1 */
 294:Core/Src/stm32f4xx_it.c **** 
 295:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream6_IRQn 1 */
 296:Core/Src/stm32f4xx_it.c **** }
 438              		.loc 1 296 1 is_stmt 0 view .LVU48
 439 0008 08BD     		pop	{r3, pc}
 440              	.L47:
 441 000a 00BF     		.align	2
 442              	.L46:
 443 000c 00000000 		.word	hdma_usart6_tx
 444              		.cfi_endproc
 445              	.LFE249:
 447              		.section	.text.DMA2_Stream7_IRQHandler,"ax",%progbits
 448              		.align	1
 449              		.global	DMA2_Stream7_IRQHandler
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	DMA2_Stream7_IRQHandler:
 456              	.LFB250:
 297:Core/Src/stm32f4xx_it.c **** 
 298:Core/Src/stm32f4xx_it.c **** /**
 299:Core/Src/stm32f4xx_it.c ****   * @brief This function handles DMA2 stream7 global interrupt.
 300:Core/Src/stm32f4xx_it.c ****   */
 301:Core/Src/stm32f4xx_it.c **** void DMA2_Stream7_IRQHandler(void)
 302:Core/Src/stm32f4xx_it.c **** {
 457              		.loc 1 302 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461 0000 08B5     		push	{r3, lr}
 462              	.LCFI9:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 3, -8
 465              		.cfi_offset 14, -4
ARM GAS  /tmp/ccU2WBTd.s 			page 14


 303:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 0 */
 304:Core/Src/stm32f4xx_it.c **** 
 305:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 0 */
 306:Core/Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 466              		.loc 1 306 3 view .LVU50
 467 0002 0248     		ldr	r0, .L50
 468 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 469              	.LVL9:
 307:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA2_Stream7_IRQn 1 */
 308:Core/Src/stm32f4xx_it.c **** 
 309:Core/Src/stm32f4xx_it.c ****   /* USER CODE END DMA2_Stream7_IRQn 1 */
 310:Core/Src/stm32f4xx_it.c **** }
 470              		.loc 1 310 1 is_stmt 0 view .LVU51
 471 0008 08BD     		pop	{r3, pc}
 472              	.L51:
 473 000a 00BF     		.align	2
 474              	.L50:
 475 000c 00000000 		.word	hdma_usart1_tx
 476              		.cfi_endproc
 477              	.LFE250:
 479              		.section	.text.USART6_IRQHandler,"ax",%progbits
 480              		.align	1
 481              		.global	USART6_IRQHandler
 482              		.syntax unified
 483              		.thumb
 484              		.thumb_func
 485              		.fpu fpv4-sp-d16
 487              	USART6_IRQHandler:
 488              	.LFB251:
 311:Core/Src/stm32f4xx_it.c **** 
 312:Core/Src/stm32f4xx_it.c **** /**
 313:Core/Src/stm32f4xx_it.c ****   * @brief This function handles USART6 global interrupt.
 314:Core/Src/stm32f4xx_it.c ****   */
 315:Core/Src/stm32f4xx_it.c **** void USART6_IRQHandler(void)
 316:Core/Src/stm32f4xx_it.c **** {
 489              		.loc 1 316 1 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493 0000 08B5     		push	{r3, lr}
 494              	.LCFI10:
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 3, -8
 497              		.cfi_offset 14, -4
 317:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 0 */
 318:Core/Src/stm32f4xx_it.c **** 
 319:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 0 */
 320:Core/Src/stm32f4xx_it.c ****   HAL_UART_IRQHandler(&huart6);
 498              		.loc 1 320 3 view .LVU53
 499 0002 0248     		ldr	r0, .L54
 500 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 501              	.LVL10:
 321:Core/Src/stm32f4xx_it.c ****   /* USER CODE BEGIN USART6_IRQn 1 */
 322:Core/Src/stm32f4xx_it.c **** 
 323:Core/Src/stm32f4xx_it.c ****   /* USER CODE END USART6_IRQn 1 */
 324:Core/Src/stm32f4xx_it.c **** }
 502              		.loc 1 324 1 is_stmt 0 view .LVU54
ARM GAS  /tmp/ccU2WBTd.s 			page 15


 503 0008 08BD     		pop	{r3, pc}
 504              	.L55:
 505 000a 00BF     		.align	2
 506              	.L54:
 507 000c 00000000 		.word	huart6
 508              		.cfi_endproc
 509              	.LFE251:
 511              		.text
 512              	.Letext0:
 513              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 514              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
 515              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 516              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 517              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 518              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 519              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 520              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 521              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_ll_usb.h"
 522              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_hcd.h"
 523              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccU2WBTd.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccU2WBTd.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccU2WBTd.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccU2WBTd.s:44     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccU2WBTd.s:51     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccU2WBTd.s:68     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccU2WBTd.s:75     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccU2WBTd.s:92     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccU2WBTd.s:99     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccU2WBTd.s:116    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccU2WBTd.s:123    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccU2WBTd.s:140    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccU2WBTd.s:147    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccU2WBTd.s:160    .text.DMA1_Stream5_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:167    .text.DMA1_Stream5_IRQHandler:0000000000000000 DMA1_Stream5_IRQHandler
     /tmp/ccU2WBTd.s:187    .text.DMA1_Stream5_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:192    .text.DMA1_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:199    .text.DMA1_Stream6_IRQHandler:0000000000000000 DMA1_Stream6_IRQHandler
     /tmp/ccU2WBTd.s:219    .text.DMA1_Stream6_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:224    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:231    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
     /tmp/ccU2WBTd.s:251    .text.TIM1_UP_TIM10_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:256    .text.USART1_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:263    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
     /tmp/ccU2WBTd.s:283    .text.USART1_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:288    .text.USART2_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:295    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
     /tmp/ccU2WBTd.s:315    .text.USART2_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:320    .text.DMA2_Stream1_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:327    .text.DMA2_Stream1_IRQHandler:0000000000000000 DMA2_Stream1_IRQHandler
     /tmp/ccU2WBTd.s:347    .text.DMA2_Stream1_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:352    .text.DMA2_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:359    .text.DMA2_Stream2_IRQHandler:0000000000000000 DMA2_Stream2_IRQHandler
     /tmp/ccU2WBTd.s:379    .text.DMA2_Stream2_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:384    .text.OTG_FS_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:391    .text.OTG_FS_IRQHandler:0000000000000000 OTG_FS_IRQHandler
     /tmp/ccU2WBTd.s:411    .text.OTG_FS_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:416    .text.DMA2_Stream6_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:423    .text.DMA2_Stream6_IRQHandler:0000000000000000 DMA2_Stream6_IRQHandler
     /tmp/ccU2WBTd.s:443    .text.DMA2_Stream6_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:448    .text.DMA2_Stream7_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:455    .text.DMA2_Stream7_IRQHandler:0000000000000000 DMA2_Stream7_IRQHandler
     /tmp/ccU2WBTd.s:475    .text.DMA2_Stream7_IRQHandler:000000000000000c $d
     /tmp/ccU2WBTd.s:480    .text.USART6_IRQHandler:0000000000000000 $t
     /tmp/ccU2WBTd.s:487    .text.USART6_IRQHandler:0000000000000000 USART6_IRQHandler
     /tmp/ccU2WBTd.s:507    .text.USART6_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_usart2_rx
hdma_usart2_tx
HAL_TIM_IRQHandler
htim1
HAL_UART_IRQHandler
huart1
huart2
ARM GAS  /tmp/ccU2WBTd.s 			page 17


hdma_usart6_rx
hdma_usart1_rx
HAL_HCD_IRQHandler
hhcd_USB_OTG_FS
hdma_usart6_tx
hdma_usart1_tx
huart6
